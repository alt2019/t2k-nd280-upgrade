//
// File generated by /home/evrazhka/ND280/nd280rep/v11r31/ROOT/v5r34p09n04/amd64_linux26/bin/rootcint at Tue Apr  4 13:28:27 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIdictdITND280UpVertex_Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TND280UpVertex_Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TND280UpVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TND280UpVertex(void *p = 0);
   static void *newArray_TND280UpVertex(Long_t size, void *p);
   static void delete_TND280UpVertex(void *p);
   static void deleteArray_TND280UpVertex(void *p);
   static void destruct_TND280UpVertex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TND280UpVertex*)
   {
      ::TND280UpVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TND280UpVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TND280UpVertex", ::TND280UpVertex::Class_Version(), "./../src/TND280UpVertex.hxx", 32,
                  typeid(::TND280UpVertex), DefineBehavior(ptr, ptr),
                  &::TND280UpVertex::Dictionary, isa_proxy, 4,
                  sizeof(::TND280UpVertex) );
      instance.SetNew(&new_TND280UpVertex);
      instance.SetNewArray(&newArray_TND280UpVertex);
      instance.SetDelete(&delete_TND280UpVertex);
      instance.SetDeleteArray(&deleteArray_TND280UpVertex);
      instance.SetDestructor(&destruct_TND280UpVertex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TND280UpVertex*)
   {
      return GenerateInitInstanceLocal((::TND280UpVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TND280UpVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TND280UpVertex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TND280UpVertex::Class_Name()
{
   return "TND280UpVertex";
}

//______________________________________________________________________________
const char *TND280UpVertex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TND280UpVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TND280UpVertex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TND280UpVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TND280UpVertex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TND280UpVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TND280UpVertex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TND280UpVertex*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TND280UpVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class TND280UpVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TND280UpVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(TND280UpVertex::Class(),this);
   }
}

//______________________________________________________________________________
void TND280UpVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TND280UpVertex.
      TClass *R__cl = ::TND280UpVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fListOfInTracks", &fListOfInTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNInTracks", &fNInTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fListOfOutTracks", &fListOfOutTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNOutTracks", &fNOutTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVertexID", &fVertexID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReacMode", &fReacMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReacModeString", (void*)&fReacModeString);
      R__insp.InspectMember("string", (void*)&fReacModeString, "fReacModeString.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosition", &fPosition);
      R__insp.InspectMember(fPosition, "fPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVertexName", (void*)&fVertexName);
      R__insp.InspectMember("string", (void*)&fVertexName, "fVertexName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TND280UpVertex(void *p) {
      return  p ? new(p) ::TND280UpVertex : new ::TND280UpVertex;
   }
   static void *newArray_TND280UpVertex(Long_t nElements, void *p) {
      return p ? new(p) ::TND280UpVertex[nElements] : new ::TND280UpVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_TND280UpVertex(void *p) {
      delete ((::TND280UpVertex*)p);
   }
   static void deleteArray_TND280UpVertex(void *p) {
      delete [] ((::TND280UpVertex*)p);
   }
   static void destruct_TND280UpVertex(void *p) {
      typedef ::TND280UpVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TND280UpVertex

namespace ROOT {
   void vectorlETND280UpVertexgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETND280UpVertexgR_Dictionary();
   static void *new_vectorlETND280UpVertexgR(void *p = 0);
   static void *newArray_vectorlETND280UpVertexgR(Long_t size, void *p);
   static void delete_vectorlETND280UpVertexgR(void *p);
   static void deleteArray_vectorlETND280UpVertexgR(void *p);
   static void destruct_vectorlETND280UpVertexgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TND280UpVertex>*)
   {
      vector<TND280UpVertex> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TND280UpVertex>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TND280UpVertex>", -2, "/home/evrazhka/ND280/nd280rep/v11r31/ROOT/v5r34p09n04/amd64_linux26/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TND280UpVertex>), DefineBehavior(ptr, ptr),
                  0, &vectorlETND280UpVertexgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TND280UpVertex>) );
      instance.SetNew(&new_vectorlETND280UpVertexgR);
      instance.SetNewArray(&newArray_vectorlETND280UpVertexgR);
      instance.SetDelete(&delete_vectorlETND280UpVertexgR);
      instance.SetDeleteArray(&deleteArray_vectorlETND280UpVertexgR);
      instance.SetDestructor(&destruct_vectorlETND280UpVertexgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TND280UpVertex> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TND280UpVertex>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETND280UpVertexgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TND280UpVertex>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETND280UpVertexgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TND280UpVertex> : new vector<TND280UpVertex>;
   }
   static void *newArray_vectorlETND280UpVertexgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TND280UpVertex>[nElements] : new vector<TND280UpVertex>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETND280UpVertexgR(void *p) {
      delete ((vector<TND280UpVertex>*)p);
   }
   static void deleteArray_vectorlETND280UpVertexgR(void *p) {
      delete [] ((vector<TND280UpVertex>*)p);
   }
   static void destruct_vectorlETND280UpVertexgR(void *p) {
      typedef vector<TND280UpVertex> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TND280UpVertex>

/********************************************************
* ../dict/TND280UpVertex_Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTND280UpVertex_Dict();

extern "C" void G__set_cpp_environmentTND280UpVertex_Dict() {
  G__cpp_reset_tagtableTND280UpVertex_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevTND280UpVertex_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TND280UpVertex */
static int G__TND280UpVertex_Dict_568_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TND280UpVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TND280UpVertex(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TND280UpVertex(*((string*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TND280UpVertex[n];
       } else {
         p = new((void*) gvp) TND280UpVertex[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TND280UpVertex;
       } else {
         p = new((void*) gvp) TND280UpVertex;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TND280UpVertex*) G__getstructoffset())->AddInTrack((TND280UpTrack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TND280UpVertex*) G__getstructoffset())->GetInTrack((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TND280UpVertex*) G__getstructoffset())->GetNInTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TND280UpVertex*) G__getstructoffset())->AddOutTrack((TND280UpTrack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TND280UpVertex*) G__getstructoffset())->GetOutTrack((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TND280UpVertex*) G__getstructoffset())->GetNOutTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TND280UpVertex*) G__getstructoffset())->SetVertexID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TND280UpVertex*) G__getstructoffset())->SetReacMode((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TND280UpVertex*) G__getstructoffset())->SetReacModeString(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TND280UpVertex*) G__getstructoffset())->SetPosition((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TND280UpVertex*) G__getstructoffset())->SetVertexName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TND280UpVertex*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TND280UpVertex*) G__getstructoffset())->GetVertexID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TND280UpVertex*) G__getstructoffset())->GetReacMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TND280UpVertex*) G__getstructoffset())->GetReacModeString();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TND280UpVertex*) G__getstructoffset())->GetPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TND280UpVertex*) G__getstructoffset())->GetVertexName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TND280UpVertex*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TND280UpVertex*) G__getstructoffset())->PrintVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TND280UpVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TND280UpVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TND280UpVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TND280UpVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TND280UpVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TND280UpVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TND280UpVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TND280UpVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_568_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TND280UpVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TND280UpVertex_Dict_568_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TND280UpVertex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TND280UpVertex(*(TND280UpVertex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TND280UpVertex G__TTND280UpVertex;
static int G__TND280UpVertex_Dict_568_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TND280UpVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TND280UpVertex*) (soff+(sizeof(TND280UpVertex)*i)))->~G__TTND280UpVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TND280UpVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TND280UpVertex*) (soff))->~G__TTND280UpVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TND280UpVertex_Dict_568_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TND280UpVertex* dest = (TND280UpVertex*) G__getstructoffset();
   *dest = *(TND280UpVertex*) libp->para[0].ref;
   const TND280UpVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TND280UpVertex,allocator<TND280UpVertex> > */
static int G__TND280UpVertex_Dict_570_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TND280UpVertex,allocator<TND280UpVertex> >::reference obj = ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->at((vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TND280UpVertex,allocator<TND280UpVertex> >::const_reference obj = ((const vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->at((vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator* pobj;
         vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator xobj = ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->begin();
         pobj = new vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator* pobj;
         vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator xobj = ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->end();
         pobj = new vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TND280UpVertex,allocator<TND280UpVertex> >::reverse_iterator* pobj;
         vector<TND280UpVertex,allocator<TND280UpVertex> >::reverse_iterator xobj = ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TND280UpVertex,allocator<TND280UpVertex> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TND280UpVertex,allocator<TND280UpVertex> >::reverse_iterator* pobj;
         vector<TND280UpVertex,allocator<TND280UpVertex> >::reverse_iterator xobj = ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->rend();
         pobj = new vector<TND280UpVertex,allocator<TND280UpVertex> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->resize((vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->resize((vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type) G__int(libp->para[0]), *((TND280UpVertex*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TND280UpVertex,allocator<TND280UpVertex> >::reference obj = ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->operator[]((vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TND280UpVertex,allocator<TND280UpVertex> >::const_reference obj = ((const vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->operator[]((vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TND280UpVertex,allocator<TND280UpVertex> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TND280UpVertex,allocator<TND280UpVertex> >[n];
     } else {
       p = new((void*) gvp) vector<TND280UpVertex,allocator<TND280UpVertex> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TND280UpVertex,allocator<TND280UpVertex> >;
     } else {
       p = new((void*) gvp) vector<TND280UpVertex,allocator<TND280UpVertex> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TND280UpVertex,allocator<TND280UpVertex> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TND280UpVertex,allocator<TND280UpVertex> >((vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type) G__int(libp->para[0]), *(TND280UpVertex*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<TND280UpVertex,allocator<TND280UpVertex> >((vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type) G__int(libp->para[0]), *(TND280UpVertex*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TND280UpVertex,allocator<TND280UpVertex> >((vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TND280UpVertex,allocator<TND280UpVertex> >((vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TND280UpVertex,allocator<TND280UpVertex> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TND280UpVertex,allocator<TND280UpVertex> >(*(vector<TND280UpVertex,allocator<TND280UpVertex> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TND280UpVertex,allocator<TND280UpVertex> >(*(vector<TND280UpVertex,allocator<TND280UpVertex> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TND280UpVertex,allocator<TND280UpVertex> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TND280UpVertex,allocator<TND280UpVertex> >(*((vector<TND280UpVertex,allocator<TND280UpVertex> >::const_iterator*) G__int(libp->para[0])), *((vector<TND280UpVertex,allocator<TND280UpVertex> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TND280UpVertex,allocator<TND280UpVertex> >(*((vector<TND280UpVertex,allocator<TND280UpVertex> >::const_iterator*) G__int(libp->para[0])), *((vector<TND280UpVertex,allocator<TND280UpVertex> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TND280UpVertex,allocator<TND280UpVertex> >& obj = ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->operator=(*(vector<TND280UpVertex,allocator<TND280UpVertex> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->reserve((vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TND280UpVertex& obj = ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TND280UpVertex& obj = ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->push_back(*(TND280UpVertex*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->swap(*(vector<TND280UpVertex,allocator<TND280UpVertex> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator* pobj;
         vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator xobj = ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->insert(*((vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator*) G__int(libp->para[0])), *(TND280UpVertex*) libp->para[1].ref);
         pobj = new vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->insert(*((vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator*) G__int(libp->para[0])), *((vector<TND280UpVertex,allocator<TND280UpVertex> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TND280UpVertex,allocator<TND280UpVertex> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->insert(*((vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator*) G__int(libp->para[0])), (vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type) G__int(libp->para[1])
, *(TND280UpVertex*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->erase(*((vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->erase(*((vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator*) G__int(libp->para[0])), *((vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TND280UpVertex_Dict_570_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TND280UpVertex,allocator<TND280UpVertex> > G__TvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR;
static int G__TND280UpVertex_Dict_570_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TND280UpVertex,allocator<TND280UpVertex> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) (soff+(sizeof(vector<TND280UpVertex,allocator<TND280UpVertex> >)*i)))->~G__TvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TND280UpVertex,allocator<TND280UpVertex> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TND280UpVertex,allocator<TND280UpVertex> >*) (soff))->~G__TvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TND280UpVertex */

/* vector<TND280UpVertex,allocator<TND280UpVertex> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTND280UpVertex_Dict {
 public:
  G__Sizep2memfuncTND280UpVertex_Dict(): p(&G__Sizep2memfuncTND280UpVertex_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTND280UpVertex_Dict::*p)();
};

size_t G__get_sizep2memfuncTND280UpVertex_Dict()
{
  G__Sizep2memfuncTND280UpVertex_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTND280UpVertex_Dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex))) {
     TND280UpVertex *G__Lderived;
     G__Lderived=(TND280UpVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex),G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTND280UpVertex_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TND280UpVertex>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex),0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex),0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex),256,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex),1,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex),257,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TND280UpVertex */
static void G__setup_memvarTND280UpVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex));
   { TND280UpVertex *p; p=(TND280UpVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TList),-1,-1,4,"fListOfInTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNInTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TList),-1,-1,4,"fListOfOutTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNOutTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fVertexID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fReacMode=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_string),-1,-1,4,"fReacModeString=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TVector3),-1,-1,4,"fPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_string),-1,-1,4,"fVertexName=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<TND280UpVertex,allocator<TND280UpVertex> > */
static void G__setup_memvarvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   { vector<TND280UpVertex,allocator<TND280UpVertex> > *p; p=(vector<TND280UpVertex,allocator<TND280UpVertex> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTND280UpVertex_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTND280UpVertex(void) {
   /* TND280UpVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex));
   G__memfunc_setup("TND280UpVertex",1219,G__TND280UpVertex_Dict_568_0_1, 105, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex), -1, 0, 1, 1, 1, 0, "u 'string' - 0 '\"vertex\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInTrack",949,G__TND280UpVertex_Dict_568_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TND280UpTrack' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInTrack",972,G__TND280UpVertex_Dict_568_0_3, 85, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpTrack), -1, 0, 1, 1, 1, 0, "i - - 0 - trkid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNInTracks",1165,G__TND280UpVertex_Dict_568_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddOutTrack",1078,G__TND280UpVertex_Dict_568_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TND280UpTrack' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutTrack",1101,G__TND280UpVertex_Dict_568_0_6, 85, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpTrack), -1, 0, 1, 1, 1, 0, "i - - 0 - trkid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNOutTracks",1294,G__TND280UpVertex_Dict_568_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertexID",1079,G__TND280UpVertex_Dict_568_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReacMode",1068,G__TND280UpVertex_Dict_568_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReacModeString",1699,G__TND280UpVertex_Dict_568_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__TND280UpVertex_Dict_568_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertexName",1323,G__TND280UpVertex_Dict_568_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__TND280UpVertex_Dict_568_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertexID",1067,G__TND280UpVertex_Dict_568_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReacMode",1056,G__TND280UpVertex_Dict_568_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReacModeString",1687,G__TND280UpVertex_Dict_568_0_16, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__TND280UpVertex_Dict_568_0_17, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertexName",1311,G__TND280UpVertex_Dict_568_0_18, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__TND280UpVertex_Dict_568_0_19, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintVertex",1163,G__TND280UpVertex_Dict_568_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfInTracks",1680,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TList), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfOutTracks",1809,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TList), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TND280UpVertex_Dict_568_0_23, 85, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TND280UpVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TND280UpVertex_Dict_568_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TND280UpVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TND280UpVertex_Dict_568_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TND280UpVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TND280UpVertex_Dict_568_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TND280UpVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TND280UpVertex_Dict_568_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TND280UpVertex_Dict_568_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TND280UpVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TND280UpVertex_Dict_568_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TND280UpVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TND280UpVertex_Dict_568_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TND280UpVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TND280UpVertex_Dict_568_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TND280UpVertex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TND280UpVertex", 1219, G__TND280UpVertex_Dict_568_0_35, (int) ('i'), G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex), -1, 0, 1, 1, 1, 0, "u 'TND280UpVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TND280UpVertex", 1345, G__TND280UpVertex_Dict_568_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TND280UpVertex_Dict_568_0_37, (int) ('u'), G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex), -1, 1, 1, 1, 1, 0, "u 'TND280UpVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR(void) {
   /* vector<TND280UpVertex,allocator<TND280UpVertex> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR));
   G__memfunc_setup("at",213,G__TND280UpVertex_Dict_570_0_1, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex), G__defined_typename("vector<TND280UpVertex,allocator<TND280UpVertex> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__TND280UpVertex_Dict_570_0_2, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex), G__defined_typename("vector<TND280UpVertex,allocator<TND280UpVertex> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TND280UpVertex_Dict_570_0_3, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TND280UpVertex_Dict_570_0_4, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TND280UpVertex_Dict_570_0_5, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiteratorgR), G__defined_typename("vector<TND280UpVertex,allocator<TND280UpVertex> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TND280UpVertex_Dict_570_0_6, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiteratorgR), G__defined_typename("vector<TND280UpVertex,allocator<TND280UpVertex> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TND280UpVertex_Dict_570_0_7, 107, -1, G__defined_typename("vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TND280UpVertex_Dict_570_0_8, 107, -1, G__defined_typename("vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TND280UpVertex_Dict_570_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TND280UpVertex_Dict_570_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type' 0 - sz u 'TND280UpVertex' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__TND280UpVertex_Dict_570_0_11, 107, -1, G__defined_typename("vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TND280UpVertex_Dict_570_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TND280UpVertex_Dict_570_0_13, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex), G__defined_typename("vector<TND280UpVertex,allocator<TND280UpVertex> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TND280UpVertex_Dict_570_0_14, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex), G__defined_typename("vector<TND280UpVertex,allocator<TND280UpVertex> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TND280UpVertex,allocator<TND280UpVertex> >",4378,G__TND280UpVertex_Dict_570_0_15, 105, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TND280UpVertex,allocator<TND280UpVertex> >",4378,G__TND280UpVertex_Dict_570_0_16, 105, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type' 0 - n u 'TND280UpVertex' - 11 'TND280UpVertex()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TND280UpVertex,allocator<TND280UpVertex> >",4378,G__TND280UpVertex_Dict_570_0_17, 105, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TND280UpVertex,allocator<TND280UpVertex> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TND280UpVertex,allocator<TND280UpVertex> >",4378,G__TND280UpVertex_Dict_570_0_18, 105, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator' 'vector<TND280UpVertex,allocator<TND280UpVertex> >::const_iterator' 10 - first u 'vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator' 'vector<TND280UpVertex,allocator<TND280UpVertex> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TND280UpVertex_Dict_570_0_19, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TND280UpVertex,allocator<TND280UpVertex> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__TND280UpVertex_Dict_570_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TND280UpVertex_Dict_570_0_21, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TND280UpVertex_Dict_570_0_22, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_TND280UpVertex), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TND280UpVertex_Dict_570_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TND280UpVertex' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TND280UpVertex_Dict_570_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TND280UpVertex,allocator<TND280UpVertex> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TND280UpVertex_Dict_570_0_25, 117, G__get_linked_tagnum(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator' - 0 - position u 'TND280UpVertex' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TND280UpVertex_Dict_570_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator' - 0 - position u 'vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator' 'vector<TND280UpVertex,allocator<TND280UpVertex> >::const_iterator' 10 - first "
"u 'vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator' 'vector<TND280UpVertex,allocator<TND280UpVertex> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TND280UpVertex_Dict_570_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator' - 0 - position k - 'vector<TND280UpVertex,allocator<TND280UpVertex> >::size_type' 0 - n "
"u 'TND280UpVertex' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TND280UpVertex_Dict_570_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TND280UpVertex_Dict_570_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TND280UpVertex_Dict_570_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator' - 0 - first u 'vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TND280UpVertex_Dict_570_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TND280UpVertex,allocator<TND280UpVertex> >", 4504, G__TND280UpVertex_Dict_570_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTND280UpVertex_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTND280UpVertex_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTND280UpVertex_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TND280UpVertex_DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TND280UpTrack = { "TND280UpTrack" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_TND280UpVertex = { "TND280UpVertex" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR = { "vector<TND280UpVertex,allocator<TND280UpVertex> >" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiterator = { "vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator" , 99 , -1 };
G__linked_taginfo G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TND280UpVertex,allocator<TND280UpVertex> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTND280UpVertex_Dict() {
  G__TND280UpVertex_DictLN_TClass.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TBuffer.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMemberInspector.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TObject.tagnum = -1 ;
  G__TND280UpVertex_DictLN_string.tagnum = -1 ;
  G__TND280UpVertex_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TList.tagnum = -1 ;
  G__TND280UpVertex_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TVector3.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TND280UpTrack.tagnum = -1 ;
  G__TND280UpVertex_DictLN_TND280UpVertex.tagnum = -1 ;
  G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR.tagnum = -1 ;
  G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiterator.tagnum = -1 ;
  G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTND280UpVertex_Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_string);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TList);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TND280UpTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_TND280UpVertex),sizeof(TND280UpVertex),-1,292096,(char*)NULL,G__setup_memvarTND280UpVertex,G__setup_memfuncTND280UpVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR),sizeof(vector<TND280UpVertex,allocator<TND280UpVertex> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR,G__setup_memfuncvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgR);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_vectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TND280UpVertex_DictLN_reverse_iteratorlEvectorlETND280UpVertexcOallocatorlETND280UpVertexgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupTND280UpVertex_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTND280UpVertex_Dict()");
  G__set_cpp_environmentTND280UpVertex_Dict();
  G__cpp_setup_tagtableTND280UpVertex_Dict();

  G__cpp_setup_inheritanceTND280UpVertex_Dict();

  G__cpp_setup_typetableTND280UpVertex_Dict();

  G__cpp_setup_memvarTND280UpVertex_Dict();

  G__cpp_setup_memfuncTND280UpVertex_Dict();
  G__cpp_setup_globalTND280UpVertex_Dict();
  G__cpp_setup_funcTND280UpVertex_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTND280UpVertex_Dict();
  return;
}
class G__cpp_setup_initTND280UpVertex_Dict {
  public:
    G__cpp_setup_initTND280UpVertex_Dict() { G__add_setup_func("TND280UpVertex_Dict",(G__incsetup)(&G__cpp_setupTND280UpVertex_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTND280UpVertex_Dict() { G__remove_setup_func("TND280UpVertex_Dict"); }
};
G__cpp_setup_initTND280UpVertex_Dict G__cpp_setup_initializerTND280UpVertex_Dict;

