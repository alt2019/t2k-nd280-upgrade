/*! \page psyche/psycheCoreHistory History for the psyche/psycheCore Package 

\section psycheCore_v0r1_history Version v0r1

Freeze information:
   - Freeze Date: Fri May 30 18:19:48 2014
   - Freeze User: acervera
   - Freeze Host: Anselmo-Cerveras-MacBook-Pro.local

Initial freeze of psycheCore. It includes most of the required functionality but it must be 
optimized for speed. This is the main reason for this freeze. 
Missing functionality:
 - Beam Flux weighting
 - Proper treatment of POT info. Although the infraestructure is there
   the POT info from the input tree is not yet propagated 



\section psycheCore_v0r3_history Version v0r3

Freeze information:
   - Freeze Date: Wed Jul  2 16:25:29 2014
   - Freeze User: mscott
   - Freeze Host: neut21.triumf.ca



An interim freeze of the psyche framework after significant changes to boost
performance, add necessary functionality and fix bugs.  The following list of
changes in non-exhaustive and may have missed some changes:

Increased functionality:

    - Initial NuE CC selection added (not yet running or validated)
    - Ability to apply flux weight systematics
    - Ability to apply a single weight systematic
    - 'Efficiency-like' weight systematics now use the new method from
      highland
    - A new SystematicSourceParams class to store the systematic source
      parameters for a given event

Performance enhancement:

    - Each event now stores a systematics class, SystBoxB, to hold pointers to
      objects used to calculate systematics.  The InitiliseEventSystematics()
      method is now called automatically when reading the input file, so the
      analyser does not need to do this anymore.  This allows the analyser to
      loop over all the events then all the systematics, or over the
      systematics then all the events with no impact on the code speed
    - Psyche now uses arrays to store objects wherever possible, rather than
      vectors, since arrays have less memory and processing overhead
    - Unification of detector enumeration: All objects now use the same
      detector enumeration
    - DetectorUsed variable now stored as a bitfield, allowing us to use
      bit-level operations to determine which detectors an object does or does
      not use
    - Rationalisation of the utility methods: 
        - All methods require a detector enumeration as an argument rather than a string
        - Logic of loops in methods improved to increase efficiency
        - Use of switch/case statements instead of multiple if/else if 
        - New, fast methods written for commonly required functions

\section psycheCore_v0r5_history Version v0r5

Freeze information:
   - Freeze Date: Mon Jul  7 15:30:19 2014
   - Freeze User: mscott
   - Freeze Host: neut21.triumf.ca

This freeze adds variables to the psyche AnaEventB class that are necessary for	the BANFF and MaCH3 analyses, and also fixes a bug in one of the selection cuts.  It also turns on the correct branches of the input tree to ensure that the necessary variables are read out correctly.  Finally, the true <-> reco vertex association is made more robust, since a bug in the code before allowed the reco vertices and their associated truth vertices to get out of step with one another.


\section psycheCore_v0r7_history Version v0r7

Freeze information:
   - Freeze Date: Thu Aug 28 03:08:22 2014
   - Freeze User: markscott
   - Freeze Host: markscott-Lenovo-IdeaPad-Y510P


Fix application of selections - remove memory leaks and increase speed

Correct calculation of POT - calculate MC-Data POT ratio for all files in each sample

Load all input files at start, rather than sequentially




\section psycheCore_v0r7_history Version v0r7

Freeze information:
   - Freeze Date: Thu Aug 28 03:02:52 2014
   - Freeze User: markscott
   - Freeze Host: markscott-Lenovo-IdeaPad-Y510P



\section psycheCore_v0r9_history Version v0r9

Freeze information:
   - Freeze Date: Wed Sep  3 18:30:10 2014
   - Freeze User: mscott
   - Freeze Host: neut21.triumf.ca



Freeze of psyche to address the bugs in the systematics code

All systematics are now running and appear to produce reasonable weights

These still need to be optimised for speed, but all appear to be thread safe

This freeze should allow the fitters to use psyche successfully


\section psycheCore_v1r1_history Version v1r1

Freeze information:
   - Freeze Date: Wed Sep 17 10:57:07 2014
   - Freeze User: mscott
   - Freeze Host: neut21.triumf.ca


First stable, validated freeze of psyche - the interface between near detector event samples and the fitters.

Changes since last freeze:

        Validation of systematics - systematics for the	NuMu selections now return the approximately the same weights and variations as seen in highland, and all weights and variations are realistic.
	Multithreaded event processing - the code now supports multithreaded event loops, see the RunPreloadExample application for an example.  You must uncomment the necessary compiler flags in the requirements file of psycheCore and psycheSteering.
	Multiple selections - the event summary	now contains information for each event selection applied, allowing multiple selections to be applied and the events reweighted.
	Bug fixes and code cleanup.

\section psycheCore_v1r3_history Version v1r3

Freeze information:
   - Freeze Date: Fri Sep 26 15:06:10 2014
   - Freeze User: mscott
   - Freeze Host: neut21.triumf.ca



Freeze of psyche containing important bugfixes to allow data events to be processed and to allow multiple selections to be successfully applied

Further speed improvements and minor bugfixes

Time taken to load events reduced by 2/3rds, since we use arrays to calculate the secondary pion interaction probabilities rather than TGraph interpolation

Addition of new anti-neutrino CCQE/CCnQE selection

Ability to only preload MC events when using the Experiment class and then load data events at processing time.  By default, both data and MC will be preloaded.  Only preloading MC is not validated fully - the RunExpPreloadExample executable produces the same results with or without preloading the data sample (it takes roughly 4 times longer without preloading to process the data once), but if you do things in a different order you may have issues.  We really need to re-write the event looping methods to have a single method that checks internally whether events are preloaded, whether we're using the Experiment class etc., and then determines how to access the correct event. Something to discuss in Toy
ama.

\section psycheCore_v1r5_history Version v1r5

Freeze information:
   - Freeze Date: Sat Oct  4 16:44:25 2014
   - Freeze User: mscott
   - Freeze Host: neut21.triumf.ca



Freeze of psyche to incorporate the recent bug fixes and improvements

A few speed improvements - adding flags for things that don't need to be calculated multiple times, and more efficient algorithm for checking the TPC multiplicity
Fixed bugs in event selection and systematics code
Highland2 and psyche now use the same flat tree converter code

\section psycheCore_v1r7_history Version v1r7

Freeze information:
   - Freeze Date: Fri Nov  7 00:04:47 2014
   - Freeze User: mravonel
   - Freeze Host: atlas013.unige.ch

- Handle better deletion of the event/super events

- Few names have been changed with respect to the last release for clarity. 

- Add new methods and modify others to allow users to use the experiment class without preloading either the data or the MC.
  This is to allow MaCh3 to process events without running out of memory




\section psycheCore_v1r9_history Version v1r9

Freeze information:
   - Freeze Date: Mon Nov 17 11:59:45 2014
   - Freeze User: mscott
   - Freeze Host: neut21.triumf.ca



Near final freeze of the psyche interface.  This freeze captures the psyche systematics and selections, whose results have been validated.

Many bug corrections for event systematics - highland, highland2 and psyche are now giving the same results for all systematics when applying the numu multi-pion selection.

There is still an issue with the anti-neutrino systematics, but that will be fixed in the next freeze along with the move to variable sized arrays.

\section psycheCore_v1r11_history Version v1r11

Freeze information:
   - Freeze Date: Fri Nov 28 18:25:41 2014
   - Freeze User: mscott
   - Freeze Host: neut21.triumf.ca



Freeze of psyche in order to produce first-pass	production 6 inputs for the BANFF fitters

Selections currently validated, including systematics, in Psyche:

       Forward horn current FGD1 NuMu CC MultiPi

       Reverse horn current FGD1 Anti-NuMu CC QE/nQE

       Forward horn current FGD1 NuMu (wrong-sign) CC QE/nQE


\section psycheCore_v1r13_history Version v1r13

Freeze information:
   - Freeze Date: Tue Dec  9 20:05:24 2014
   - Freeze User: mscott
   - Freeze Host: neut21.triumf.ca



Final freeze of the psyche framework for the winter oscillation analysis.  Psyche now contains validated selections, variation systematics and weight systematics for the production 6 FGD1 neutrino mode (forward horn current) and anti-neutrino mode (reverse horn current) selections.

Big changes since the last freeze: 

    - Many, many bug fixes 
    - Run by run flux weighting, for the 11b and 13a flux tuning
    - Addition of selection validity ranges, so we don't apply anti-neutrino 
      selections to neutrino data and MC.  Controlled by a comma separated 
      string in the psycheSteering parameter file
    - OSX/Darwin headers
    - Nominal bunch timing for run 5
    - Memory leak fixes
    - Information for pion SI systematic not computed if systematic is 
      disabled - events preload 30 times faster without pion SI
    - Updated systematics tables
    - Ability to run production 5 style selection and systematics as well as 
      production 6 - flags in the parameter files

\section psycheCore_v1r15_history Version v1r15

Freeze information:
   - Freeze Date: Mon Dec 22 22:20:45 2014
   - Freeze User: mravonel
   - Freeze Host: atlas013.unige.ch

Fix memory leaks


\section psycheCore_v1r17_history Version v1r17

Freeze information:
   - Freeze Date: Thu Jan  8 17:23:44 2015
   - Freeze User: mravonel
   - Freeze Host: atlas013.unige.ch

SystBox: proper initialization of all variables in the constructor (all pointers to NULL)
and proper destructor (correctly delete all array pointers,  so no more compiler dependent since [] was missing),
delete pointers to arrays of invPT and invPT_true,  the latter should fix some memory leak


\section psycheCore_v1r19_history Version v1r19

Freeze information:
   - Freeze Date: Mon Jan 26 09:34:56 2015
   - Freeze User: mscott
   - Freeze Host: neut21.triumf.ca



Freeze of psyche in order to be compatible with highland2 changes. Needed for the collaboration meeting to allow highland2 to work with more analyses than just FGD NuMu, but not fully tested with respect to the oscillation input samples.  Everything appears OK, but this freeze should not used for near detector fitting.

\section psycheCore_v1r21_history Version v1r21

Freeze information:
   - Freeze Date: Tue Feb 17 18:39:07 2015
   - Freeze User: acervera
   - Freeze Host: Macintosh-64b9e8d35af0.local


- for the input manager introduced a flag to check whether one deals with MC or data input, 
  this is to allow setting the correct detector definitions (e.g. to account for 
  data/mc differences for tracker ecals) on the initialization level 
- Import some global vertex stuff from highland. To be moved to highland2 most likely 
  since this is not needed for the official selections/systematics
- In DataSample add method to set externally POTGoodBeamGoodND280 variable. In this way 
  files with missing header tree can be used
- Improve dump methods



\section psycheCore_v2r1_history Version v2r1

Freeze information:
   - Freeze Date: Tue Mar 31 19:10:08 2015
   - Freeze User: acervera
   - Freeze Host: Macintosh-64b9e8d35af0.local

Major freeze with many changes in 
to allow selection depending systematics, and performance optimization


\section psycheCore_v2r3_history Version v2r3

Freeze information:
   - Freeze Date: Thu Apr 30 15:35:22 2015
   - Freeze User: acervera
   - Freeze Host: Macintosh-64b9e8d35af0.local

Correct few bugs and improve the EventBox functionality mainly:

- temporary solution to make SIPion work with event preloading. Make Initialize and FinalizeEvent methods virtual
- correct important memory leak introduced in previous release. Must delete the arrays created within the steps
- move ToF info to psyche
- ToyMaker: Systematic must be added into the array by index and not by the order they are added
- proper treatment of indices for variation systematics. Worked for the default systematics but not for the ones added by the user
- deal with -250 KA current for antinu
- the task of creating the EventBox is given to each Selection. This does not mean that there will be an EventBox per selection, 
  but there could be several boxes. They are created and filled in the InitializeEvent method of the selection
  Add another level of abstraction in the EventBox. The base class EventBox contains only TracksInGroup and TrueTracksInGroup. 
  The user should inherit from it. The AnaEventB has now an array of EventBoxes, which are added by index




\section psycheCore_v2r5_history Version v2r5

Freeze information:
   - Freeze Date: Fri Jun 19 18:04:28 2015
   - Freeze User: acervera
   - Freeze Host: Macintosh-64b9e8d35af0.local

Many changes, most of them related with new functionality:
  - MiniTree
  - Systematics tunning
  - Automatic geometry
  - PerSpill POT
  - etc


MiniTree
 - GetSpill and GetEvent methods now modify the entry number and the spill pointer internally. This allows reading spill and event based 
   FlatTrees. Also move from the derived converters several methods that are common to all of them

 - udapt to the new InputConverter format. Modify the way LoadSpill and LoadEvent works. The spill and the event are now created internally by the converters. Both methods 
   can modify the entry number inside to allows reading spill and event based trees. MakeEvent and MakeEventFromFinalSpill work is now done internaly by the new AnaEventB constructor, which 
   takes an Spill and a Bunch. 

Added files: 
- HEPConstants.hxx added the place to store various constants so to have a common place throughout psyche/highland
- Deprecated.hxx  add deprecated functionality, to keep backward compatibility

Header: 
 - Header  has been simplified and moved from 
   highland2 to psyche, such that it can be used by DataSample, which was previously duplicating the same code. 
   Header is now able to interprete FlatTrees and MiniTrees The header handles now POT info, SoftwareVersion and IsMC. 
   The AddHeader method checks now the compatibility of version and IsMC with previously added files
   SoftwareVersion and IsMC completly handled by Header


 - Is the InputConverter the one that handles the SoftwareVersion (it was the Header previously). 
   The Input converter contains now a Header instance to handle POT info. 
   AddFileToChain returns now a boolean. If false the probram will stop. 
   This boolean will be in general related with the SoftwareVersion, it will be false 
   when trying to add files with different versions

Selections:
 - In SelectionBase exit(1) in the default methods with an error message to make sure that the user implements the mandatory methods
 - In StepBase exit when an error message when mandatory methods are not overwritten in the derived classes
 - correct bug in CopySteps method

Systematics: 
 - Add additional optional IsRelevant methods to be used within the apply methods of the systematics. Those methods take a ToyBox as argument so that 
   one can make choises based on the results of the selection
 - For weight systematics add Apply method taking the selection as argument. 
   This is now the actual method called by SystematicManager, which allows further selection tunning of relevant objects once the ToyBox is filled


In BaseDataClasses:
  - bring in RangeMomentumMuon variable, so to be able to propagate systematics for high-angle analysis
  - prepare to propagate high-angle matching systematics: added true track groups for fgd-ecal,  fgd-ecal-smrd
  - Add POTSincePreviousSavedSpill to AnaBeamB to allow for dynamic POT counting, also in new MiniTree. 
  - Add a GeomID to the AnaSpillB class such that each spill knows its geometry
  - Add AnaEventB constructor provided the a AnaSpillB and a AnaBunchB in that spill. 
   In this way the event creation, needed by psyche is done internally and not in the InputManager as it was done before



\section psycheCore_v2r7_history Version v2r7

Freeze information:
   - Freeze Date: Wed Jul  1 12:05:18 2015
   - Freeze User: acervera
   - Freeze Host: Macintosh-64b9e8d35af0.local


Mainly solve MiniTree related memory leaks and solve problems with event preloading 

InputManager
- add InputIsMiniTree(). Previously InputIsFlatTree() was also true for MiniTree

BaseDataClasses
- For the moment don't save in the MiniTree the Original object associated to AnaTrackB, AnaSubTrackB and AnaVertexB. 
  This preasumes the MiniTree already contains corrections, which cannot be undone. To be reviewed !!!

- Deal with OutOfBunch in CopyVectorIntoArrays and CopyArraysIntoVectors method. 
  Delete objects in the vectors when the arrays are empty to prevent Memory leaks when reading MiniTrees 

Converters
- add method Int_t GetNEvents(Int_t entries), which gives the number of events corresponding to a given number of entries. 
  This is needed for event preloading in psycheSteering. For the moment the default value is just nevents=nentries (valid for FlatTree). 
  MiniTree overwrites the default method
- Reset method must reset also the header (POT, IsMC, etc)


\section psycheCore_v2r9_history Version v2r9

Freeze information:
   - Freeze Date: Fri Jul 31 12:29:22 2015
   - Freeze User: acervera
   - Freeze Host: ip-192-168-19-79.private.net


Summary:
 - Solve several bugs
 - Improve performance with the new CheckRedoSelection method
 - Solve some small memory leaks

Detailed list of changes:
- split EventBoxB::GroupEnum into TrackGroupEnum and TrueTrackGroupEnum
- SystematicVariationBase and SystematicWeightBase: make InitializeEvent() functions virtual such that one can create a custom SystBox
- HepConstants: added and instance of ROOT TDatabasePDG so to be able to use its functionality to retrive particle properties given a PDG
- move the ToyMaker from the SystematicManager to ConfigurationBase in highlandTools such that each configuration can have its own. 
  In this way random number sequence will depend on the systematics enabled and not on all systematics, which is a nightmare for validation.
- decide externally on whether to compute the POT per spill or not since the decision depends on 
  MiniTree, IsMC and production
- CheckRedoSelection was not working for a while because the PreviousToyBox in the selection must be Reset and not deleted (needed by Multithreading), done by FinalizeEvent. 
  To check whether we are in the first toy cannot use the existence of the PreviousToyBox pointer. Instead check that the values in there are not the default ones
- Many changes mainly focused on optimising the selection with the CheckRedoSelection method:
  - Add GetCutNumber method
  - Apply the selection from a given step (computed by the CheckRedoSelection method which now has that value as argument)
  - Don't reset the full ToyBox when we don't start from step 0
  - Add maxAccumLevelForAllToys to be used in highland2
- Move ToyBoxB to its own set of files. Add TrueVertex to the ToyBoxB tto be used by analysis without reconstructed primary vertex 
- return value of FillEventSummary ignored for the moment to solve bug 1160. Must check if there are side effects (bug 1164)
- remove small memory leak. Delete the SystBox::RelevantTrack array before creating a new one. The memory leaks appeared only 
  in no MULTITHREADING mode because the box is the same for all events
  In Tree Manager delete the file in the destructor. This should solve bug 1135



\section psycheCore_v2r11_history Version v2r11

Freeze information:
   - Freeze Date: Wed Sep 23 18:43:24 2015
   - Freeze User: acervera
   - Freeze Host: portanselmo.ific.uv.es

Summary: 
- Many bugs corrected 1175, 1179, 1169, 1181, 1087  (1087 and 1075 waiting for confirmation)
- Selection validation introduced

InputManager
- Attept to solve bug 1175. The previous successfully read spill is deleted internally by the InputManager (and not by the user)
when the current spill beeing read is OK. That ensures that the last succesfully read spill is available until a new good spill is read. 
In this way the last successfully read spill (which is not necessarily the last spill in the input file) can be saved in the MiniTree.
This implies that the last successfully read spill in a job will not be deleted internally. The user can still call the DeleteSpill method of the input manager 
to avoid that.

BaseDataClasses:
- Probably the final solution for bug 1179. 
  All True-Reco and reco-reco (AnaVertexB::Tracks) links are recreated in the AnaSpill copy constructor. The data members in the derived classes 
  (in DataClasses) are filled using virtual methods, which are empty in the AnaSpillB base class.
  Save back tracks AnaVertexB::TracksVect 

Parameters
- mechanism to ensure parameters are not accessed before the point in which the overwride parameters file is read. 
  This should fully solve bug 1169

Selections:
- implement mechanism to enforce the ToyBoxB::Reset method to be implemented in the derived class. 
  There is now a ResetBase method in the base class. Both ResetBase and Reset are called from Selection base. 
  There ia a check after creating the box to ensure that if the class is not of type ToyBoxB (using typeid) the 
  Reset method should be implemented. This should close bug 1181
- Add methods to Disable, Remove, Insert and Replace steps. Insert and Replace don't work yet
- Correct bug in CopySteps methods, which cannot specify the branch ID of the selection where they will be copied
  because copying is done before the branch IDs are created. Intead one should specify the branch sequence.
- Protection against wrong branch sequences, covering all cases
- Improve couts in case of wrong selection creation
- Solve the first two items of bug 1087. 
  - Allow split with no previous cut by adding a dummy step. 
  - Allow no cut in any of the branches after a split. 
- Add mechanism to validate a selection. All steps in the selection should have branch unique IDs defined, what means that SetBranchAlias method has been 
  properly called. This should close bug 1087
- make sure steps with the same title are not added to the same branch. If this occurs the program stops with an error message
- initialize _presel_accum_cut_level to zero in the constructor

POT counting: 
- Change float to doubles in all POT related stuff to minimize the effect of numerical precision when running on mamy files. This should have no side effects on old 
  MiniTrees or FlatTrees, but we should check




\section psycheCore_v2r13_history Version v2r13

Freeze information:
   - Freeze Date: Fri Jan  8 12:12:29 2016
   - Freeze User: acervera
   - Freeze Host: Macintosh-64b9e8d35af0-2.local

BaseDataClasses:
 - Add ECal true tracks group
 - add SpillsSincePreviousSavedSpill functionality for the MiniTree. This requires adding a new data member to AnaBeamB
 - Add MostUpstreamLayerHit to AnaTrackB as it is needed for the ecal pi0 veto
   and for the ecal shower reconstruction efficiency calculation
 - new vars for AnaTrackB relevant for 4pi analysis: MomentumFlip, DirectioEnd and DirectionStartFlip

Systematics:
 - ECal PID syst added in SystId.hxx
 - Move NMAXSYSTEMATICS to ToyExperiment.hxx, the lowest level systematic class, to minimize the number of files to be compiles when this 
   variable is changed. 
   Increase its value to 100 in order to solve bug 1192. I've done speed tests, and the way systematics are implemented ensures 
   that speed does not suffer when NMAXSYSTEMATICS is increased. 

Utils: 
 - generalize the particle mass constants, which are now filled from the TDatabasePDG
 - Add method to read all parameters file from a list of packages
   void LoadParametersFiles(const std::vector<std::string>& packageNames, bool fixed=false)
 - Use the new utility method utils::ConfigureTreeBranch, which check the existence of the leaf 
   in the tree before calling SetBranchAddress

Selections:
 - change name of Initialize(nevents) method to CreateToyBoxArray. 
 - Add Initialize method which calls DefineSteps, DefineDetectorFV and Validate. 
   This method is called by the SelectionManager when adding a selection and also by the CopySteps methods of the selection. 
   In this way selections must not call anything in their constructor, which can be sometimes forgotten
 - Add method HasBranch which provides a protection againt wrong requested branches. Improve verborsity
 - _detectorFV is now branch dependent. Add DefineDetectorFV mandatory method such that the user can set the detector for 
  each of the branches
 - GetRelevant...TrackGroups takes now a branch number as argument as well



\section psycheCore_v2r15_history Version v2r15

Freeze information:
   - Freeze Date: Fri Feb  5 11:53:02 2016
   - Freeze User: acervera
   - Freeze Host: portanselmo.ific.uv.es

no changes with respect to previous version. 
Just increase version number (v3) for development version



\section psycheCore_v3r1_history Version v3r1

Freeze information:
   - Freeze Date: Sun Mar  6 17:03:53 2016
   - Freeze User: acervera
   - Freeze Host: Macintosh-64b9e8d35af0-2.local


major reorganization with new packages and  changes in event model class names

- AnaTrackB --> AnaParticleB
- AnaTrueTrackB --> AnaTrueParticleB
- remove tracker specific stuff from the ToyBoxB
- Add new level of inheritance AnaTrueObjectC and AnaRecObjectC such that 
  systematic tunning can work with objects other than tracks (particles), as 
  hits, vertices, clusters, etc.
- Very simple CoreDataClasses (with suffix C, ie. AnaEventC), needed by the machinery are introduced. 
  In this way the machinery can be independent of the event model. 
- Id enums and BaseDataClasses moved to a new package psycheEventModel
- Also substitute enums used for Ids (SystId, EventBoxId, SampleId, SubDetId) by a typedef (to an integer for the moment), 
  with similar name (SystId_h, EventBocId_h, where h stands for highland) such that they can be easily extended.
- The selection has now a member _eventBoxId that must be filled. Otherwise the selection validation fails



\section psycheCore_v3r3_history Version v3r3

Freeze information:
   - Freeze Date: Mon Apr 11 16:20:56 2016
   - Freeze User: acervera
   - Freeze Host: portanselmo.ific.uv.es

Freeze for BANFF development

- Add new Apply methods taking a ToyExperiment as input and not a ToyVariation. The idea is that the systematic deals internally with the appropriate parameters 
  from the ToyExperiment. The ToyExperiment is just a collection of parameters defining the experimental setup, organized in groups, a group for each systematic
- Weights and Variations have been generalised such that the can be used not only for systematics. Then the relevant classes have been renamed: 
  SystematicWeightBase    --> EventWeightBase
  SystematicVariationBase --> EventVariationBase
- The return type of the EventWeightBase::Apply is now Weight_h which is used as typedef in WeightType.
  WeightType currently has a Systematic (mean + variation) and a Correction (mean only)
- EventWeightBase: Apply --> ComputeWeight
- Add separate managers for EventWeights and EventVariations since those objects are more general than systematics.



\section psycheCore_v3r5_history Version v3r5

Freeze information:
   - Freeze Date: Wed May  4 18:23:43 2016
   - Freeze User: acervera
   - Freeze Host: Macintosh-64b9e8d35af0-2.local

- InputManager.cxx: clear the vector of converters after deleting them, to solve bug 
  https://bugzilla.nd280.org/show_bug.cgi?id=1306

- correct potential bug in WeightType constructor: give the correction as first argument and the systematic as second argument



\section psycheCore_v3r7_history Version v3r7

Freeze information:
   - Freeze Date: Sat Jun 11 17:04:46 2016
   - Freeze User: acervera
   - Freeze Host: Macintosh-64b9e8d35af0-2.local

Solve few bugs, and other changes not affecting general machinery

- InputConverter: Access the TFile with a pointer (to solve bug 1312).
- InputManager: Comment out the sanity checks on the input file (to solve bug 1312). This is only a temporary solution.
- CoreUtils: add methods for Int_t
- SelectionBase: don't do any thing related to event statistics  in MULTITHREAD mode. Proper initialization of event statistics
- CoreDataClasses:  make Clone and GetIsMC methods pure visrtual in AnaEventC. 
  GetIsMC was returning always true and the method was not virtual. This is why weights were applied 
  to data files. 
- SystId: Add SystEnumLast_SystId at the end of the enum, such that we don't have to modify things in other packages when the last systematic changes


*/