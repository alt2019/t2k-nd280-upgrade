#! /bin/csh -f

set file_dir = /sps/t2k/mlamoure/dev/Upgrade/t2k-nd280-upgrade/files 
set code_dir = /sps/t2k/mlamoure/dev/Upgrade/t2k-nd280-upgrade/highlandUP/numuCC4piAnalysis/v0r0
set original_parfile = ${code_dir}/parameters/numuCC4piAnalysis.parameters.dat

set par_dir = ${code_dir}/output/jobs/parameters
set log_dir = ${code_dir}/output/jobs/logs
set job_dir = ${code_dir}/output/jobs/jobs
set out_dir = ${code_dir}/output/jobs/files

set launcher = launchJobs

# prepare some scrit that will be used to merge the output files into one for each config
set conc = ${out_dir}/concatenate

# consider the suffix
set ext = ""
if ($1 != "") then
    set ext = "_$1"
endif

# where to start for job numbering
set j=`ls ${job_dir} | wc -l`

set max_job=100 # maximum of simultaneous job
cd ${code_dir}/output/jobs



set i_nu=0
# loop on the beam configuration
while ($i_nu < 3)

    if ($i_nu == 0) then
	set folder = "FHC_numu"
	set numode = ""
    endif
    if ($i_nu == 1) then
	set folder = "RHC"
	set numode = "_antinu"
    endif
    if ($i_nu == 2) then
	set folder = "RHC"
	set numode = "_nubkg_antinu"
    endif

    set i_conf=0
    # loop on the detector configuration
    foreach i_conf (0 2)

	set conf = $i_conf
	if ($conf == 4) then
	    set conf = 0
	endif
	if ($conf == 5) then
	    set conf = 2
	endif

	set i_target = 1
	# number of targets (Super-FGD + FGD)
	set N_targets = 2
	if ($conf == 2) then
	    set N_targets = 3
	endif
		
	# loop on targets
	while ($i_target <= $N_targets)

	    echo "${numode} // config ${i_conf} // target ${i_target}"

	    set parfile = ${par_dir}/par_$j.dat
	    cp -f $original_parfile $parfile

	    set name = "config${i_conf}_Target${i_target}${numode}${ext}"
	    set job  = "${job_dir}/job_${name}.sh"
			
	    if ($i_nu == 1) then
		sed -i "/NeutrinoMode =/c\ < numuCC4piAnalysis.NeutrinoMode = -1 >" $parfile
	    endif

	    if ($conf == 0) then
		sed -i "/EnableTarget1 =/c\ < numuCC4piAnalysis.EnableTarget1 = 0 >" $parfile
		sed -i "/EnableTarget2 =/c\ < numuCC4piAnalysis.EnableTarget2 = 0 >" $parfile		
		if ($i_target == 1) then
		    sed -i "/EnableFGD1 =/c\ < numuCC4piAnalysis.EnableFGD1 = 1 >" $parfile
		    sed -i "/EnableFGD2 =/c\ < numuCC4piAnalysis.EnableFGD2 = 0 >" $parfile
		else
		    sed -i "/EnableFGD1 =/c\ < numuCC4piAnalysis.EnableFGD1 = 0 >" $parfile
		    sed -i "/EnableFGD2 =/c\ < numuCC4piAnalysis.EnableFGD2 = 1 >" $parfile
		endif
	    else
		sed -i "/EnableTarget2 =/c\ < numuCC4piAnalysis.EnableTarget2 = 0 >" $parfile
		if ($i_target == 1) then
		    sed -i "/EnableFGD1 =/c\ < numuCC4piAnalysis.EnableFGD1 = 1 >" $parfile
		    sed -i "/EnableFGD2 =/c\ < numuCC4piAnalysis.EnableFGD2 = 0 >" $parfile
		    sed -i "/EnableTarget1 =/c\ < numuCC4piAnalysis.EnableTarget1 = 0 >" $parfile
		else if ($i_target == 2) then
		    sed -i "/EnableFGD1 =/c\ < numuCC4piAnalysis.EnableFGD1 = 0 >" $parfile
		    sed -i "/EnableFGD2 =/c\ < numuCC4piAnalysis.EnableFGD2 = 1 >" $parfile
		    sed -i "/EnableTarget1 =/c\ < numuCC4piAnalysis.EnableTarget1 = 0 >" $parfile
		else
		    sed -i "/EnableFGD1 =/c\ < numuCC4piAnalysis.EnableFGD1 = 0 >" $parfile
		    sed -i "/EnableFGD2 =/c\ < numuCC4piAnalysis.EnableFGD2 = 0 >" $parfile
		    sed -i "/EnableTarget1 =/c\ < numuCC4piAnalysis.EnableTarget1 = 1 >" $parfile
		endif
	    endif

	    sed -i "/Configuration =/c\ < psycheNDUPUtils.Geometry.nd280upConfiguration = ${conf} >" $parfile

	    touch ${job}
	    # split the job in subfiles
	    set f=0
	    foreach input_file (`ls ${file_dir}/${folder}/config${i_conf}/*.root | sed -r 's/^.+\///'`)
		echo "${code_dir}/output/jobs/jobBase $parfile ${out_dir}/${name}_split_$f.root ${file_dir}/${folder}/config${i_conf}/${input_file}" >> ${job}			    
		@ f = $f + 1
	    end

	    chmod +x ${job}

	    set dq = '"'
	    set job_name = "${dq}hUP_$j${dq}"
	    set k = $j
	    @ k = $k - $max_job
	    set prev_job_name = "${dq}hUP_$k${dq}"

	    if ($j < $max_job) then
		echo "qsub -N $job_name -P P_t2k -o ${log_dir}/output_$j.txt -e ${log_dir}/outerr_$j.txt -l ct=24:00:00,s_fsize=8G,s_rss=8G,sps=1 ${job}" >> $launcher
	    else
		echo "qsub -N $job_name -hold_jid $prev_job_name -P P_t2k -o ${log_dir}/output_$j.txt -e ${log_dir}/outerr_$j.txt -l ct=24:00:00,s_fsize=8G,s_rss=8G,sps=1 ${job}" >> $launcher
	    endif
			
	    if ($f != 0) then
		echo "hadd -f ${name}.root ${name}_split_*.root" >> ${conc}
		echo "rm -f ${name}_split_*.root" >> ${conc}
	    endif

	    @ j = $j + 1
	    @ i_target = $i_target + 1
	end

	@ i_conf = $i_conf + 1
    end

    @ i_nu = $i_nu + 1
end

chmod +x launchJobs
chmod +x ${conc}
